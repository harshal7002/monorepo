name: CI/CD Pipeline for SOA WebLogic Deployment

on:
  push:
    branches:
      - main
    paths:
      - 'SOA/**'
  pull_request:
    branches:
      - main
    paths:
      - 'SOA/**'

jobs:
  detect-changes:
    runs-on: [self-hosted, linux]
    outputs:
      apps: ${{ steps.set-vars.outputs.apps }}
    steps:
      - name: Checkout full history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Detect Changed SOA Apps
        id: set-vars
        run: |
          echo "Detecting changed SOA apps between ${{ github.event.before }} and ${{ github.sha }}"

          apps=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} \
            | grep '^SOA/' \
            | cut -d'/' -f2 \
            | sort -u \
            | jq -R . | jq -s -c .)

          echo "Detected changed SOA apps: $apps"

          echo "apps=$apps" >> $GITHUB_OUTPUT

  build:
    needs: detect-changes
    runs-on: [self-hosted, linux]
    if: ${{ needs.detect-changes.outputs.apps != '[]' }}
    strategy:
      matrix:
        app: ${{ fromJson(needs.detect-changes.outputs.apps) }}
    steps:
      - name: Build WAR for ${{ matrix.app }}
        run: |
          cd SOA/${{ matrix.app }}
          mvn clean package -DskipTests

  # sonar-analysis:
  #   needs: build
  #   runs-on: [self-hosted, linux]
  #   strategy:
  #     matrix:
  #       app: ${{ fromJson(needs.detect-changes.outputs.apps) }}
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: SonarQube Analysis - ${{ matrix.app }}
  #       env:
  #         SONAR_HOST_URL: http://34.93.93.9:9000
  #         SONAR_TOKEN: sqa_05dff30184c6e2f5bf6d0bc2d56bfb30d9d9fe4e
  #       run: |
  #         cd SOA/${{ matrix.app }}
  #         source ~/.bashrc
  #         sonar-scanner \
  #           -Dsonar.projectKey=${{ matrix.app }} \
  #           -Dsonar.host.url=$SONAR_HOST_URL \
  #           -Dsonar.token=$SONAR_TOKEN \
  #           -Dsonar.sources=. \
  #           -Dsonar.java.binaries=target/classes

  # veracode-scan:
  #   needs: sonar-analysis
  #   runs-on: [self-hosted, linux]
  #   strategy:
  #     matrix:
  #       app: ${{ fromJson(needs.detect-changes.outputs.apps) }}
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Prepare artifact for Veracode - ${{ matrix.app }}
  #       run: |
  #         cd SOA/${{ matrix.app }}
  #         mvn clean package -DskipTests
  #         # Create artifact to be uploaded (e.g., WAR file)

  #     - name: Upload to Veracode and scan - ${{ matrix.app }}
  #       env:
  #         VERACODE_API_ID: ${{ secrets.VERACODE_API_ID }}
  #         VERACODE_API_KEY: ${{ secrets.VERACODE_API_KEY }}
  #       run: |
  #         # Replace with actual command to upload to Veracode
  #         veracode-upload \
  #           --api-id $VERACODE_API_ID \
  #           --api-key $VERACODE_API_KEY \
  #           --file target/${{ matrix.app }}.war

  # nexus-upload:
  #   needs: veracode-scan
  #   runs-on: [self-hosted, linux]
  #   strategy:
  #     matrix:
  #       app: ${{ fromJson(needs.detect-changes.outputs.apps) }}
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Upload WAR to Nexus repository - ${{ matrix.app }}
  #       env:
  #         NEXUS_REPO_URL: ${{ secrets.NEXUS_REPO_URL }}
  #         NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
  #         NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
  #       run: |
  #         cd SOA/${{ matrix.app }}
  #         curl -u $NEXUS_USERNAME:$NEXUS_PASSWORD \
  #           --upload-file target/${{ matrix.app }}.war \
  #           $NEXUS_REPO_URL/repository/your-repository-path/${{ matrix.app }}.war

  deploy:
    needs: [build,detect-changes]
    runs-on: [self-hosted, linux]
    strategy:
      matrix:
        app: ${{ fromJson(needs.detect-changes.outputs.apps) }}
    steps:
      - name: Deploy WAR to WebLogic - ${{ matrix.app }}
        run: |
          chmod +x ./deploy_to_weblogic.sh
          ./deploy_to_weblogic.sh "SOA/${{ matrix.app }}"
